{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Final Collab","provenance":[{"file_id":"1OKmy8S-IjxigVxf1H03gfz0WFP3c-IDd","timestamp":1637407015664}],"collapsed_sections":["ak-sthOiRJW6","BW1Zi6ofaUov"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OO-05ATW7XVj","executionInfo":{"status":"ok","timestamp":1636450909006,"user_tz":0,"elapsed":13064,"user":{"displayName":"Alexandre Santos Gomes","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14082300357332709855"}},"outputId":"713f2fab-0751-4da1-e309-d6e6b09f8654"},"source":["!pip install mysql-connector\n","!pip install python-pptx"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting mysql-connector\n","  Downloading mysql-connector-2.2.9.tar.gz (11.9 MB)\n","\u001b[K     |████████████████████████████████| 11.9 MB 7.7 MB/s \n","\u001b[?25hBuilding wheels for collected packages: mysql-connector\n","  Building wheel for mysql-connector (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for mysql-connector: filename=mysql_connector-2.2.9-cp37-cp37m-linux_x86_64.whl size=247965 sha256=9b997d5c4ddd326a91abf8a7e98db49ad8b3a5a991a2ffbe025d71d3d9944dc7\n","  Stored in directory: /root/.cache/pip/wheels/42/2f/c3/692fc7fc1f0d8c06b9175d94f0fc30f4f92348f5df5af1b8b7\n","Successfully built mysql-connector\n","Installing collected packages: mysql-connector\n","Successfully installed mysql-connector-2.2.9\n","Collecting python-pptx\n","  Downloading python-pptx-0.6.21.tar.gz (10.1 MB)\n","\u001b[K     |████████████████████████████████| 10.1 MB 7.7 MB/s \n","\u001b[?25hRequirement already satisfied: lxml>=3.1.0 in /usr/local/lib/python3.7/dist-packages (from python-pptx) (4.2.6)\n","Requirement already satisfied: Pillow>=3.3.2 in /usr/local/lib/python3.7/dist-packages (from python-pptx) (7.1.2)\n","Collecting XlsxWriter>=0.5.7\n","  Downloading XlsxWriter-3.0.2-py3-none-any.whl (149 kB)\n","\u001b[K     |████████████████████████████████| 149 kB 60.4 MB/s \n","\u001b[?25hBuilding wheels for collected packages: python-pptx\n","  Building wheel for python-pptx (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for python-pptx: filename=python_pptx-0.6.21-py3-none-any.whl size=470950 sha256=ad7522d6115a008948949aee8ca528de313dea1dcb2f99b9ddc2d40613520be7\n","  Stored in directory: /root/.cache/pip/wheels/a7/ab/f4/52560d0d4bd4055e9261c6df6e51c7b56c2b23cca3dee811a3\n","Successfully built python-pptx\n","Installing collected packages: XlsxWriter, python-pptx\n","Successfully installed XlsxWriter-3.0.2 python-pptx-0.6.21\n"]}]},{"cell_type":"code","metadata":{"id":"x4kThR2r7jsF","colab":{"base_uri":"https://localhost:8080/","height":362},"executionInfo":{"status":"error","timestamp":1636450886480,"user_tz":0,"elapsed":5,"user":{"displayName":"Alexandre Santos Gomes","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14082300357332709855"}},"outputId":"9a6cca3d-fbf8-4f89-c28a-dd3f6984b4c7"},"source":["import mysql.connector\n","import matplotlib as plt\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import math\n","import calendar\n","import datetime\n","from pptx import Presentation\n","from pptx.util import Inches, Pt"],"execution_count":null,"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-bed7a8a65c35>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mmysql\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconnector\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmatplotlib\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmatplotlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpyplot\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mnumpy\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmath\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'mysql'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iQTUHMQ48du8","executionInfo":{"status":"ok","timestamp":1634082532056,"user_tz":-60,"elapsed":12,"user":{"displayName":"Alexandre Santos Gomes","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14082300357332709855"}},"outputId":"f958d5b3-e91f-4251-afce-3acb2996770c"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"markdown","metadata":{"id":"wwIl-hm1-djR"},"source":["#                            **Sales**\n"]},{"cell_type":"code","metadata":{"id":"w_Yfsvxq_DUG"},"source":["connection = mysql.connector.connect(user = 'toyscie', password = 'WILD4Rdata!', host = '51.68.18.102', port = '23456', database = 'toys_and_models', use_pure = True)\n","\n","cursor = connection.cursor()\n","\n","# cat_sep_20 = \"\"\"select productLine, sum(quantityOrdered) as total_ordered\n","# from orderdetails as ord\n","# join products as p on p.productCode = ord.productCode\n","# join orders as o on o.orderNumber = ord.orderNumber\n","# where shippedDate >= DATE_FORMAT(CURDATE(), '2020-%m-%d') - INTERVAL 2 MONTH                                     \n","# group by productLine\"\"\"\n","\n","# cat_sep_21 = \"\"\"select productLine, sum(quantityOrdered) as total_ordered\n","# from orderdetails as ord\n","# join products as p on p.productCode = ord.productCode\n","# join orders as o on o.orderNumber = ord.orderNumber\n","# where shippedDate >= DATE_FORMAT(CURDATE(), '%Y-%m-%d') - INTERVAL 2 MONTH\n","# group by productLine\"\"\"\n","\n","cat_sep_20_sample = \"\"\"select productLine, sum(quantityOrdered) as total_ordered\n","from orderdetails as ord\n","join products as p on p.productCode = ord.productCode\n","join orders as o on o.orderNumber = ord.orderNumber\n","where year(o.shippedDate) = 2021 and month(o.shippedDate) between 9 and 10\n","group by productLine\"\"\"\n","cat_sep_21_sample = \"\"\"select productLine, sum(quantityOrdered) as total_ordered\n","from orderdetails as ord\n","join products as p on p.productCode = ord.productCode\n","join orders as o on o.orderNumber = ord.orderNumber\n","where year(o.shippedDate) = 2021 and month(o.shippedDate) between 9 and 10\n","group by productLine\"\"\"\n","actual_month = str(datetime.datetime.now().month)\n","actual_year = str(datetime.datetime.now().year)\n","list_cat_sep_20_sample = cat_sep_20_sample.split()\n","list_cat_sep_21_sample = cat_sep_21_sample.split()\n","\n","list_cat_sep_20_sample[28] = str(int(actual_year) -  1)\n","list_cat_sep_20_sample[32] = str(int(actual_month) - 1)\n","list_cat_sep_20_sample[34] = str(int(actual_month) - 1)\n","\n","cat_sep_20 = \" \".join(list_cat_sep_20_sample)\n","\n","list_cat_sep_21_sample[28] = actual_year\n","list_cat_sep_21_sample[32] = str(int(actual_month) - 1)\n","list_cat_sep_21_sample[34] = str(int(actual_month) - 1)\n","\n","cat_sep_21 = \" \".join(list_cat_sep_21_sample)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5UoOOXZ8KV3v","executionInfo":{"status":"ok","timestamp":1634082533330,"user_tz":-60,"elapsed":32,"user":{"displayName":"Alexandre Santos Gomes","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14082300357332709855"}},"outputId":"870462e5-b894-4228-a62b-2dedf52e0a5b"},"source":["cursor.execute(cat_sep_20)\n","\n","cat_sep_20_dict = {}\n","\n","for good,data in cursor:\n","  cat_sep_20_dict[good] = int(data)\n","\n","cat_sep_20_dict\n","\n","\n","cursor.execute(cat_sep_21)\n","\n","cat_sep_21_dict = {}\n","\n","\n","for good,data in cursor:\n","  cat_sep_21_dict[good] = int(data)\n","\n","cat_sep_21_dict"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Classic Cars': 1515,\n"," 'Motorcycles': 513,\n"," 'Planes': 468,\n"," 'Ships': 323,\n"," 'Trains': 138,\n"," 'Trucks and Buses': 706,\n"," 'Vintage Cars': 1138}"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","metadata":{"id":"UCI5ZX6_KlMn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1634082533331,"user_tz":-60,"elapsed":21,"user":{"displayName":"Alexandre Santos Gomes","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14082300357332709855"}},"outputId":"55eb4406-311f-4563-81e4-42b5e3a56b52"},"source":["def yearvar(current,previous):\n","  return (current - previous)/previous * 100\n","\n","keylist= []\n","\n","for key in cat_sep_21_dict.keys():\n","  if key in cat_sep_20_dict.keys():\n","    keylist.append(key)\n","\n","print(keylist)\n","cat_year_variation = {}\n","\n","for key in keylist:\n","  cat_year_variation[key] = yearvar(cat_sep_21_dict[key],cat_sep_20_dict[key])\n","\n","\n","keys1 = set(cat_sep_21_dict.keys()) \n","keys2 = set(cat_sep_20_dict.keys())\n","\n","total_keys = keys1.union(keys2)\n","\n","def yearvar(current,previous):\n","  if previous == 0:\n","    return 0\n","  return ((current - previous)/previous) * 100\n","\n","keys1 = set(cat_sep_21_dict.keys()) \n","keys2 = set(cat_sep_20_dict.keys())\n","\n","total_keys = keys1.union(keys2)\n","\n","finalAnalysis = []\n","for i in total_keys: #\n","  if i in cat_sep_21_dict:\n","    value21 = cat_sep_21_dict[i]\n","  else:\n","    value21 = 0\n","  if i in cat_sep_20_dict:\n","    value20 = cat_sep_20_dict[i]\n","  else:\n","    value20 = 0\n","  finalAnalysis.append((i, value21, value20, round(yearvar(value21, value20), 2)))\n","\n","print(\"product, 2021, 2020, variation\")\n","print(finalAnalysis)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Classic Cars', 'Motorcycles', 'Planes', 'Ships', 'Trains', 'Trucks and Buses', 'Vintage Cars']\n","product, 2021, 2020, variation\n","[('Trucks and Buses', 706, 314, 124.84), ('Vintage Cars', 1138, 831, 36.94), ('Classic Cars', 1515, 1110, 36.49), ('Trains', 138, 23, 500.0), ('Ships', 323, 319, 1.25), ('Motorcycles', 513, 493, 4.06), ('Planes', 468, 424, 10.38)]\n"]}]},{"cell_type":"code","metadata":{"id":"1AVaasHnLhzD"},"source":["categories=[]\n","sales_20=[]\n","sales_21=[]\n","variation=[]\n","for el in range(0, len(finalAnalysis)):\n","  categories.append(finalAnalysis[el][0])\n","  sales_20.append(finalAnalysis[el][2])\n","  sales_21.append(finalAnalysis[el][1])\n","  variation.append(finalAnalysis[el][3])\n","labels = categories\n","year_2020 = sales_20\n","year_2021 = sales_21"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Y6kJtI7YMtBY","colab":{"base_uri":"https://localhost:8080/","height":655},"executionInfo":{"status":"ok","timestamp":1634082534518,"user_tz":-60,"elapsed":1201,"user":{"displayName":"Alexandre Santos Gomes","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14082300357332709855"}},"outputId":"0c12940b-1ef6-4086-a84c-1126c0a7800f"},"source":["labels = categories\n","year_2020 = sales_20\n","year_2021 = sales_21\n","\n","\n","x = np.arange(len(labels))\n","width = 0.35\n","\n","fig, ax = plt.subplots(figsize=(13.5,4.5))\n","rects1 = ax.bar(x - width/2, year_2020, width, label='September 2020', color = '#3776AB')\n","rects2 = ax.bar(x + width/2, year_2021, width, label='September 2021', color = 'orange')\n","\n","for rec in rects1:\n","    yval = rec.get_height()\n","    plt.text(rec.get_x()+0.1, yval, yval)\n","\n","for rec in rects2:\n","    yval = rec.get_height()\n","    plt.text(rec.get_x()+0.05, yval, yval)\n","\n","ax.set_ylabel('Items sold', fontsize = 15, labelpad = 15)\n","ax.set_xlabel('Category', fontsize = 15, labelpad = 5)\n","ax.set_xticks(x)\n","ax.set_xticklabels(labels)\n","ax.legend()\n","\n","\n","# try:\n","#   for i, v in enumerate(variation):\n","#     ax.text(i-.1, v/variation[i]+25, f\"{variation[i]}%\", fontsize=12, fontweight=\"bold\", color=\"black\")\n","# except ZeroDivisionError:\n","#   pass\n","\n","plt.savefig('/content/drive/MyDrive/1st Project/Final Project/Docs and Images/salesplot.png')\n","\n","\n","fig, ax = plt.subplots(figsize=(13.5,4.5))\n","bar = ax.bar(labels, variation)\n","\n","lb = ax.get_xticklabels()\n","plt.setp(lb, rotation = 35, horizontalalignment = 'right')\n","#plt.title(' Sales by Category: September 2021 vs September 2020(%)')\n","plt.xlabel('Category', fontsize=15)\n","plt.ylabel('Percentage', fontsize=15)\n","\n","for b in bar:\n","    yval = b.get_height()\n","    plt.text(b.get_x()+0.2, yval+1, yval)\n","\n","#plt.show()\n","\n","plt.savefig('/content/drive/MyDrive/1st Project/Final Project/Docs and Images/salesplotpercentage.png', bbox_inches='tight')"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 972x324 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 972x324 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"Qed8pAccOy9q"},"source":["prs = Presentation()\n","#Title slide\n","title_slide_layout = prs.slide_layouts[0]\n","slide = prs.slides.add_slide(title_slide_layout)  \n","\n","slide.shapes.title.text = \"Perfect Toys\"\n","slide.placeholders[1].text =\"Daily report\"\n","\n","#Bullet slide, items by category\n","bullet_slide_layout = prs.slide_layouts[5]\n","slide = prs.slides.add_slide(bullet_slide_layout)\n","shapes = slide.shapes\n","title_shape = shapes.title\n","title_shape.text = 'Items sold by category'\n","left = top = Inches(1)\n","pic = slide.shapes.add_picture('/content/drive/MyDrive/1st Project/Final Project/Docs and Images/salesplot.png', left = Inches(0.5), top = Inches(2), width = Inches(9), height = Inches(4))\n","\n","bullet_slide_layout = prs.slide_layouts[5]\n","slide = prs.slides.add_slide(bullet_slide_layout)\n","shapes = slide.shapes\n","title_shape = shapes.title\n","title_shape.text = 'Rate of comparison by percentage'\n","left = top = Inches(1)\n","pic = slide.shapes.add_picture('/content/drive/MyDrive/1st Project/Final Project/Docs and Images/salesplotpercentage.png', left = Inches(0.5), top = Inches(2), width = Inches(9), height = Inches(4))\n","\n","\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ak-sthOiRJW6"},"source":["# **Finances**"]},{"cell_type":"code","metadata":{"id":"NECRsseARSwk"},"source":["connection = mysql.connector.connect(user = 'toyscie', password = 'WILD4Rdata!', host = '51.68.18.102', port = '23456', database = 'toys_and_models', use_pure = True)\n","\n","cursor = connection.cursor()\n","\n","#query for last full 2 months\n","# queryf2 = \"\"\"select country, sum(amount) from payments as p inner join customers as c\n","# on c.customerNumber = p.customerNumber\n","# where year(paymentDate) = 2021 and month(paymentDate) between 9 and 19\n","# group by country\n","# order by country\"\"\"\"\n","# list_queryf2 = queryf2.split()\n","# actual_month = str(datetime.datetime.now().month)\n","# actual_year = str(datetime.datetime.now().year)\n","# list_queryf2[19] = actual_year\n","# list_queryf2[23] = str(int(actual_month) - 3)\n","# list_queryf2[25] = str(int(actual_month) - 1)\n","# query_2full_month = \" \".join(list_queryf2)\n","\n","#query for last 60 days\n","queryf1 = \"\"\"select country, sum(amount) from payments as p inner join customers as c\n","on c.customerNumber = p.customerNumber\n","where paymentDate >= DATE_FORMAT(CURDATE(), '%Y-%m-%d') - INTERVAL 2 MONTH\n","group by country\n","order by country\"\"\"\n","\n","clients_with_debt =\"\"\"select c.customerName, sum(d.quantityOrdered*d.priceEach) as total_buy, paymentsub.total_paid, (sum(d.quantityOrdered*d.priceEach)-paymentsub.total_paid) as difference\n","from orderdetails as d\n","join orders as o on o.orderNumber = d.orderNumber\n","left join customers as c on o.customerNumber = c.customerNumber\n","join (select customerNumber, sum(amount) as total_paid\n","from payments as p\n","group by customerNumber) as paymentsub\n","on paymentsub.customerNumber = o.customerNumber\n","group by o.customerNumber\n","having difference != 0\n","order by difference desc\"\"\"\n","\n","cursor.execute(queryf1)\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"B1rLuCEdb-3w","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1634082536111,"user_tz":-60,"elapsed":581,"user":{"displayName":"Alexandre Santos Gomes","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14082300357332709855"}},"outputId":"9894e7b5-1abd-461b-a351-c81fc06350ae"},"source":["#queryf1\n","data_list = []\n","for data in cursor:\n","  data_list += data\n","\n","for i in range(0,len(data_list)+ 1):\n","  if i % 2 != 0:\n","    data_list[i] = float(data_list[i])\n","\n","country_list = []\n","amount_list = []\n","\n","for i in range(0,len(data_list)):\n","  if i % 2 == 0 or i == 0:\n","    country_list.append(data_list[i]) \n","  else:\n","    amount_list.append(data_list[i])\n","\n","print(\"country list: \", country_list)\n","print(\"amount list \", amount_list)\n","\n","#clients with debt\n","cursor.execute(clients_with_debt)\n","\n","clients_with_debt_list = []\n","for data in cursor:\n","  clients_with_debt_list += [data]\n","\n","final_clients_debt_list = []\n","for row in clients_with_debt_list:\n","  for item in row:\n","    final_clients_debt_list.append(item)\n"," \n","final_clients_debt_list = [str(item) if isinstance(item, str) == False else item for item in final_clients_debt_list]\n","\n","rows_table_orders_not_paid = int((len(final_clients_debt_list)/4)+1)\n","\n","len_str_list = len(final_clients_debt_list)\n","\n","print(final_clients_debt_list)\n","\n","# full 2 months\n","# cursor.execute(query_2full_month)\n","\n","# query_2full_month_list = []\n","# for data in cursor:\n","#   query_2full_month_list += data\n","\n","# for i in range(0,len(query_2full_month_list)+ 1):\n","#   if i % 2 != 0:\n","#     query_2full_month_list[i] = float(query_2full_month_list[i])\n","\n","# country_2fullmonth_list = []\n","# amount_2fullmonth_list = []\n","\n","# for i in range(0,len(data_list)):\n","#   if i % 2 == 0 or i == 0:\n","#     country_2fullmonth_list.append(query_2full_month_list[i]) \n","#   else:\n","#     amount_2fullmonth_list.append(query_2full_month_list[i])\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["country list:  ['Australia', 'Belgium', 'Finland', 'France', 'Japan', 'Singapore', 'Spain', 'USA']\n","amount list  [48516.09, 14379.9, 70373.42, 51358.23, 33967.73, 3516.04, 185237.84, 232074.62]\n","['Mini Gifts Distributors Ltd.', '584188.24', '500590.20', '83598.04', 'Scandinavian Gift Ideas', '120943.53', '48809.90', '72133.63', 'Euro+ Shopping Channel', '715908.86', '668843.50', '47065.36', 'Reims Collectables', '126983.19', '80326.25', '46656.94', 'Land of Toys Inc.', '149085.15', '107639.94', '41445.21', 'Down Under Souveniers, Inc', '113195.27', '79601.95', '33593.32', 'FunGiftIdeas.com', '88627.49', '58333.72', '30293.77', \"Anna's Decorations, Ltd\", '137034.22', '107185.70', '29848.52', 'Volvo Model Replicas, Co', '66694.82', '43680.65', '23014.17', \"Kelly's Gift Shop\", '107207.04', '84243.44', '22963.60', 'Lyon Souveniers', '67659.19', '49731.10', '17928.09', 'Alpha Cognac', '60483.36', '48051.04', '12432.32', 'Mini Auto Werke', '51059.99', '42252.87', '8807.12', 'UK Collectables, Ltd.', '69351.78', '61167.18', '8184.60', 'GiftsForHim.com', '57989.42', '56662.38', '1327.04']\n"]}]},{"cell_type":"code","metadata":{"id":"gt7EVGiZdP8b"},"source":["turnover_dictionary = dict(zip(country_list,amount_list))\n","\n","turnover_dictionary_sorted = dict(sorted(turnover_dictionary.items(), key=lambda x: x[1], reverse=False))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"pVA0ZNf6dUGd","colab":{"base_uri":"https://localhost:8080/","height":394},"executionInfo":{"status":"ok","timestamp":1634082536114,"user_tz":-60,"elapsed":22,"user":{"displayName":"Alexandre Santos Gomes","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14082300357332709855"}},"outputId":"d5c2303f-f86d-4402-a9f5-15a117b2d2ac"},"source":["x = list(turnover_dictionary_sorted.keys())\n","y = list(turnover_dictionary_sorted.values())\n","\n","fig, ax = plt.subplots()\n","width = 0.75\n","ind = np.arange(len(y))\n","ax.figure.set_size_inches(10,6)\n","ax.barh(ind, y, width, color = \"#3776AB\", tick_label = x)\n","ax.set_ylabel('Country', fontsize = 15, labelpad = 15)\n","ax.set_xlabel('Turnover', fontsize = 15, labelpad = 5)\n","\n","for i, v in enumerate(y):\n","    ax.text(v + 3, i + (-0.1), str(v), \n","            color = 'black')\n","\n","plt.savefig('/content/drive/MyDrive/1st Project/Final Project/Docs and Images/financesplot.png')"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAq4AAAF5CAYAAABeLKgMAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzde3gX1bn3//fNQRFTBFREwC2eCYcQIVZsPaEFilgVQStlV6pYW7vrbmXrludxU2t3PVDpA7YWrKKi1p9goQK11mpFPANGRLQUlWo0IFVQBEFEDuv3R76kgYRAkBAG3q/rypXJmjVr7knE65OVNTORUkKSJEna1dWr6wIkSZKkbWFwlSRJUiYYXCVJkpQJBldJkiRlgsFVkiRJmWBwlSRJUiY0qOsC9lQHHHBAatu2bV2XIUmStFUvvfTS0pTSgXVdh8G1jrRt25bi4uK6LkOSJGmrIuKduq4BXCogSZKkjDC4SpIkKRMMrpIkScoEg6skSZIyweAqSZKkTDC4SpIkKRMMrpIkScoEg6skSZIyweAqSZKkTDC4SpIkKRMMrpIkScoEg6skSZIyoUFdF7Cnmr9wGd2unljXZUiSpAybMbx/XZewUznjKkmSpEwwuEqSJCkTDK6SJEnKBIOrJEmSMsHgKkmSpEwwuEqSJCkTDK6SJEnKBIOrJEmSMsHgKkmSpEwwuEqSJCkTDK6biYi2EfHaZm0/jYgrI6JbRMyMiDkR8feI+Olm/UZFxKKI8PsqSZJ2itLSUrp370779u3p0KEDt9xyCwDDhg2joKCAwsJCevbsyXvvvQfA/fffT0FBAZ06deIrX/kKr7zySvlYjz76KMcccwxHHnkkN910U8XTHJPLP3Mi4r2ImFxxZ0QcFxHrIqLKd9BGxF4RcXtEvBER8yOiX659SETMi4i5EfFERBxa3bUasGrmHuDSlFIh0BF4cOOOXFjtC5QCp9RNeZIkaU/ToEEDfvnLXzJv3jxmzJjBb37zG+bNm8dVV13F3LlzmTNnDmeeeSY/+9nPADjssMN46qmnePXVVxk2bBiXXnopAOvXr+c//uM/+POf/8y8efN44IEHmDdv3sbTvJ5SKsxloBeAP2zcERH1geHAY9WUeQ3wQUrpaKA98FSu/WWgKKVUAEwEflHdtRpca6YFsBggpbQ+pTSvwr5Tgb8BY4ABO780SZK0Jzr44IPp0qULAF/60pfIz89n0aJFNGnSpLzPqlWriAgAvvKVr9CsWTMAunXrxsKFCwGYNWsWRx55JIcffjh77bUXF1xwAVOmTNnkXBHRBDgNqDjjejkwCfigmjIvBm4ESCltSCktzW0/mVL6NNdnBtCmums1uNbMSOD1iHgoIr4XEY0q7BsAPAA8BPSJiIZ1UqEkSdpjlZSU8PLLL3P88ccDcM0113DIIYdw//33l8+4VnTnnXfSu3dvABYtWsQhhxxSvq9NmzYsWrRo80POAZ5IKa0AiIjWlP3FecyWaoqIprnN/42I2RHx+4g4qIqug4E/V3d9BtfK0pbaU0o/A4oomwr/FvAolK3bAM4AJud+kDOBXpsPEBGXRkRxRBSvXb2iVoqXJEl7ppUrV9KvXz9GjRpVPtt6/fXXU1paysCBA7n11ls36f/kk09y5513Mnz48JqcZuNE3UajgKtTShuqOaYBZTOpz6eUulC21GBExQ4R8e+UZaybqzu5wbWyD4Fmm7U1BzZOaf8jpTQGOB3oHBH7UxZSmwKvRkQJcCJVLBdIKd2eUipKKRU13KfJ5rslSZK2y9q1a+nXrx8DBw7k3HPPrbR/4MCBTJo0qfzruXPncskllzBlyhT2339/AFq3bk1paWl5n4ULF9K6devyryPiAODLwJ8qDF0EjM/ln/7A6Ig4Z7PTfwh8yr/Wxf4e6FJh3K9Rtgb2rJTSmuqu0+C6mZTSSmBxRJwGEBHNga8Dz0ZEn9i4QASOAtYDH1MWUi9JKbVNKbUFDgN6RETjnX4BkiRpj5JSYvDgweTn5zNkyJDy9jfffLN8e8qUKbRr1w6Ad999l3PPPZf77ruPo48+urzPcccdx5tvvsnbb7/N559/zvjx4znrrLMqnqo/8HBK6bMK5z6sQv6ZCPwgpbTJEwdSSgn4I2X3A0HZ5N88gIg4FvgtZaG1ujWyQNnUrSq7EPhNRPy/3NfXpZT+ERHXAyMj4lNgHTAQ2JuyYPv9jQenlFZFxLPAN4AJO7d0SZK0J3nuuee477776NSpE4WFhQDccMMN3Hnnnbz++uvUq1ePQw89lNtuuw2An/3sZ3z44Yf84Ac/AMqeSlBcXEyDBg249dZb6dWrF+vXr+fiiy+mQ4cOFU91AXAT2ygi5uSeQgBwNXBfRIwClgAX5dpvBvKA3+fmBt9NKZ1VabCNY5aFYO1seS2PSB0H1WhNiSRJ0iZmDK/ysak7XES8lFIq2iknq4ZLBSRJkpQJBldJkiRlgsFVkiRJmWBwlSRJUiYYXCVJkpQJBldJkiRlgsFVkiRJmWBwlSRJUiYYXCVJkpQJvvK1jrRr02ynve1CkiRpd+CMqyRJkjLB4CpJkqRMMLhKkiQpEwyukiRJygSDqyRJkjLB4CpJkqRMMLhKkiQpEwyukiRJygSDqyRJkjLBN2fVkfkLl9Ht6ol1XYYkSZX4ZkftqpxxlSRJUiYYXCVJkpQJBldJkiRlgsFVkiRJmWBwlSRJUiYYXCVJkpQJBldJkiRlgsFVkiRJmWBwlSRJUiYYXCVJUiUXX3wxLVq0oGPHjuVtc+bMoVu3bhQWFlJUVMSsWbMAmD59Ovvttx+FhYUUFhbys5/9DIDS0lK6d+9O+/bt6dChA7fcckv5WMOGDaOgoIDCwkJ69uzJe++9B8DNN99cPk7Hjh2pX78+H330UaX6nnjiCbp06UJhYSEnnngiCxYs2GT/pEmTiAiKi4t3+PdGdSdSSnVdw04XEdcA3wLWAxuA76WUZtZwjLOA9imlm7anhryWR6SOg4Zvz6GSJNWqGcP78/TTT5OXl8eFF17Ia6+9BkDPnj254oor6N27N4888gi/+MUvmD59OtOnT2fEiBE8/PDDm4yzePFiFi9eTJcuXfjkk0/o2rUrkydPpn379qxYsYImTZoA8Ktf/Yp58+Zx2223bXL8H//4R0aOHMm0adMq1Xj00UczZcoU8vPzGT16NLNmzWLcuHEAfPLJJ/Tp04fPP/+cW2+9laKiolr4Lu1ZIuKllFKdfyP3uBnXiDgBOBPoklIqAL4GlNZ0nJTS1O0NrZIk7epOPvlkmjdvvklbRLBixQoAli9fTqtWraod4+CDD6ZLly4AfOlLXyI/P59FixYBlIdWgFWrVhERlY5/4IEHGDBgQJVjV1fLsGHDuPrqq2nUqNHWLlMZ06CuC6gDBwNLU0prAFJKSwEiogR4EOgNrAa+lVJaEBHfAP4H2Av4EBiYUno/Ir4DFKWUfhgR44AVQBHQEvjvlNLEnXpVkiTVslGjRtGrVy+uvPJKNmzYwPPPP1++74UXXqBz5860atWKESNG0KFDh02OLSkp4eWXX+b4448vb7vmmmu499572W+//XjyySc36f/pp5/y6KOPcuutt1ZZy9ixYznjjDPYZ599aNKkCTNmzABg9uzZlJaW0qdPH26++eYddenaRexxM67AY8AhEfFGRIyOiFMq7FueUuoE3AqMyrU9C3RLKR0LjAf+ewvjHgycSNlsbpUzsRFxaUQUR0Tx2tUrdsS1SJK004wZM4aRI0dSWlrKyJEjGTx4MABdunThnXfe4ZVXXuHyyy/nnHPO2eS4lStX0q9fP0aNGrXJTOv1119PaWkpAwcOrBRQ//jHP/LVr3610qzvRiNHjuSRRx5h4cKFXHTRRQwZMoQNGzYwZMgQfvnLX+7gK9euYo8LrimllUBX4FJgCTAhN3sK8ECFzyfkttsAf4mIV4GrgE1/hfyXySmlDSmlecBBWzj37SmlopRSUcN9mlTVRZKkXdY999zDueeeC8B5551XfnNWkyZNyMvLA+CMM85g7dq1LF26FIC1a9fSr18/Bg4cWH7s5gYOHMikSZM2aRs/fvwWlwksWbKEV155pXz29pvf/CbPP/88n3zyCa+99hqnnnoqbdu2ZcaMGZx11lneoLUb2eOCK0BKaX1KaXpK6Vrgh0C/jbsqdst9/jVwa24m9nvAlhbMrKmwXXmhjiRJGdeqVSueeuopAKZNm8ZRRx0FwD//+U823uw9a9YsNmzYwP77709KicGDB5Ofn8+QIUM2GevNN98s354yZQrt2rUr/3r58uU89dRTnH322VXW0axZM5YvX84bb7wBwOOPP05+fj777bcfS5cupaSkhJKSErp168bUqVO9OWs3ssetcY2IY4ANKaWN/2IKgXeATsA3Kfsz/zeBF3L79wMW5bYH7cRSJUmqMwMGDGD69OksXbqUNm3acN1113HHHXfwox/9iHXr1tGoUSNuv/12ACZOnMiYMWNo0KAB++yzD+PHjyciePbZZ7nvvvvo1KkThYWFANxwww2cccYZDB06lNdff5169epx6KGHbvJEgYceeoiePXuy7777blLTGWecwdixY2nVqhV33HEH/fr1o169ejRr1oy77rpr531zVGf2uMdhRURXymZRmwLrgAWULRsoBiZQdnPWGmBA7uass4GRwDJgGnBcSunUKm7OenjjDVkRsTKllFddHT4OS5K0q5oxvH9dl6BdzK7yOKw9LrhuSe6pAkUbnzJQ2wyukqRdlcFVm9tVguseucZVkiRJ2bPHrXHdkpRS27quQZIkSVvmjKskSZIyweAqSZKkTDC4SpIkKRMMrpIkScoEg6skSZIyweAqSZKkTPBxWHWkXZtmPuBZkiSpBpxxlSRJUiYYXCVJkpQJBldJkiRlgsFVkiRJmWBwlSRJUiYYXCVJkpQJBldJkiRlgsFVkiRJmWBwlSRJUib45qw6Mn/hMrpdPbGuy9Aezre3SZKyxBlXSZIkZYLBVZIkSZlgcJUkSVImGFwlSZKUCQZXSZIkZYLBVZIkSZlgcJUkSVImGFwlSZKUCQZXSZIkZYLBVZIkSZmw2wXXiFgfEXMqfLSNiOe34bjpEVG0g2ooiYgDdsRYUm16/fXXKSwsLP9o0qQJo0aN4qOPPqJHjx4cddRR9OjRg2XLlgEwZcoUCgoKKCwspKioiGeffRaAJ598cpNxGjVqxOTJkwEYPHgwnTt3pqCggP79+7Ny5cot1vPuu++Sl5fHiBEjACgtLaV79+60b9+eDh06cMstt9Tyd0SStCuLlFJd17BDRcTKlFLedhw3HbgypVS8A2ooAYpSSku31Cev5RGp46DhX/RU0hcyY3j/8u3169fTunVrZs6cyW9+8xuaN2/O0KFDuemmm1i2bBnDhw9n5cqV7LvvvkQEc+fO5fzzz2f+/PmbjPnRRx9x5JFHsnDhQho3bsyKFSto0qQJAEOGDKFFixYMHTq0ynr69+9PRHD88cdz5ZVXsnjxYhYvXkyXLl345JNP6Nq1K5MnT6Z9+/a1902RJFUSES+llHbIBN8XsdvNuFYlIlbmPp+am1mdGBHzI+L+iIgq+o+JiOKI+FtEXFehvSQirouI2RHxakS0y7XvHxGP5fqPBSqNKe3qnnjiCY444ggOPfRQpkyZwqBBgwAYNGhQ+expXl4eG//JrFq1iir++TBx4kR69+5N48aNAcpDa0qJ1atXV3kMwOTJkznssMPo0KFDedvBBx9Mly5dAPjSl75Efn4+ixYt2kFXLEnKmt0xuO5TYZnAQ1XsPxb4MdAeOBz4ahV9rsn9VlEAnBIRBRX2LU0pdQHGAFfm2q4Fnk0pdQAeAv6tqsIi4tJcIC5eu3rFdl2cVFvGjx/PgAEDAHj//fc5+OCDAWjZsiXvv/9+eb+HHnqIdu3a0adPH+66665qx9nooosuomXLlsyfP5/LL7+80jErV65k+PDhXHvttVusr6SkhJdffpnjjz9+u65PkpR9u2NwXZ1SKsx99K1i/6yU0sKU0gZgDtC2ij7nR8Rs4GWgA2Uhd6M/5D6/VOHYk4HfAaSU/gQsq6qwlNLtKaWilFJRw32a1PCypNrz+eefM3XqVM4777xK+yJik1nSvn37Mn/+fCZPnsywYcM26bt48WJeffVVevXqtUn73XffzXvvvUd+fj4TJkyodI6f/vSnXHHFFeTlVb3KZ+XKlfTr149Ro0aVz+BKkvY8u2Nw3Zo1FbbXAw0q7oyIwyibST09pVQA/AloVMXxlY6VsurPf/4zXbp04aCDDgLgoIMOYvHixUBZGG3RokWlY04++WTeeustli7911LuBx98kL59+9KwYcNK/evXr88FF1zApEmTKu2bOXMm//3f/03btm0ZNWoUN9xwA7feeisAa9eupV+/fgwcOJBzzz13h1yvJCmb9sTgujVNgFXA8og4COi9Dcc8DXwLICJ6A81qrzxpx3vggQc2+fP+WWedxT333APAPffcw9lnnw3AggUL2HhD5+zZs1mzZg3777//FsdJKbFgwYLy7alTp9KuXbtK53/mmWcoKSmhpKSEH//4x/zf//t/+eEPf0hKicGDB5Ofn8+QIUN2/IVLkjLFGcPNpJReiYiXgflAKfDcNhx2HfBARPwNeB54txZLlHaoVatW8fjjj/Pb3/62vG3o0KGcf/753HnnnRx66KE8+OCDAEyaNIl7772Xhg0bss8++zBhwoTyZQQlJSWUlpZyyimnlI+TUmLQoEGsWLGClBKdO3dmzJgxAEydOpXi4mJ+9rOfbbG25557jvvuu49OnTpRWFgIwA033MAZZ5yxw78PkqRd3273OKys8HFY2hVUfByWJElb4uOwJEmSpBowuEqSJCkTDK6SJEnKBIOrJEmSMsHgKkmSpEwwuEqSJCkTDK6SJEnKBIOrJEmSMsHgKkmSpEzwla91pF2bZr61SJIkqQaccZUkSVImGFwlSZKUCQZXSZIkZYLBVZIkSZlgcJUkSVImGFwlSZKUCQZXSZIkZYLBVZIkSZngCwjqyPyFy+h29cS6LkM7mC+VkCSp9jjjKkmSpEwwuEqSJCkTDK6SJEnKBIOrJEmSMsHgKkmSpEzY5uAaEd+ICIOuJEmS6kRNguhkYGFEDI+I/NoqSJIkSapKTYLrEcAdwPnAaxHxQkR8NyKa1E5pkiRJ0r9sc3BNKZWklK5NKR0G9AAWACOBxRFxX0R0r60iJUmSpO1as5pSmpZS+jZwNPASMBD4a0S8FRFXRIRv5JIkSdIOtV3BNSJOiYhxwOtAR+A3QE9gInAdcO+OKvCLiIj1ETGnwkfbuq5Je4a2bdvSqVMnCgsLKSoqAuD3v/89HTp0oF69ehQXF5f3nTVrFoWFhRQWFtK5c2ceeuihascBmDNnDt26dStvnzVrVqUa5syZwwknnECHDh0oKChgwoQJ5fsGDx5M586dKSgooH///qxcubI2vg2SJO1QkVLato4RhwKDch9tgenAWOAPKaU1Ffr1BX6XUtp3RxdbUxGxMqWUt4V9Qdn1b9jJZQGQ1/KI1HHQ8Lo4tWrRjOH9gbLAWVxczAEHHFC+7+9//zv16tXje9/7HiNGjCgPop9++il77bUXDRo0YPHixXTu3Jn33nuPBg0aVDkOQM+ePbniiivo3bs3jzzyCL/4xS+YPn36Jn3eeOMNIoKjjjqK9957j65du/L3v/+dpk2bsmLFCpo0KVuePmTIEFq0aMHQoUNr8TsjScqyiHgppVS09Z61qyZ/0n8LeA8YB9yVUnp7C/3+BlSe/tkF5GZc/wLMBLoCZ0TEUOA4YB9gYkrp2lzfEuAe4BtAQ+C8lNL8iMgDfg0UAQm4LqU0KSJ6UjbbvDfwD+CilJLTWCqXn1/1wzgaN25cvv3ZZ59R9jtV9SKCFStWALB8+XJatWpVqc/RRx9dvt2qVStatGjBkiVLaNq0aXloTSmxevXqbTqnJEl1rSZLBc4EDk0pDasmtJJSeiOltKvcqLVPhWUCG//+ehQwOqXUIaX0DnBN7jeIAuCUiCiocPzSlFIXYAxwZa5tGLA8pdQppVQATIuIA4D/Ab6W618MDNkJ16ddVETQs2dPunbtyu23377V/jNnzqRDhw506tSJ2267jQYNGlQ7zqhRo7jqqqs45JBDuPLKK7nxxhurHX/WrFl8/vnnHHHEEeVtF110ES1btmT+/Plcfvnl23mlkiTtPNsUXCOiEWXPcf1G7Zazw61OKRXmPvrm2t5JKc2o0Of8iJgNvAx0ANpX2PeH3OeXKFseAfA1ytb0ApBSWgZ0yx33XETMoWw5xaGbFxMRl0ZEcUQUr1294otfnXZZzz77LLNnz+bPf/4zv/nNb3j66aer7X/88cfzt7/9jRdffJEbb7yRzz77rNpxxowZw8iRIyktLWXkyJEMHjx4i2MvXryYb3/729x9993Uq/evf/J333037733Hvn5+Zusf5UkaVe1TcE1pfQZ8AGwvnbL2SlWbdyIiMMom0k9PTd7+iegUYW+G9furqf6ZRUBPF4hJLdPKVVKEiml21NKRSmloob7+Pjb3Vnr1q0BaNGiBX379q3y5qmq5Ofnk5eXx2uvvVbtOPfccw/nnnsuAOedd94Wx1+xYgV9+vTh+uuvp1u3bpX2169fnwsuuIBJkybV7AIlSaoDNVkq8FvgPyOiYW0VUweaUBZkl0fEQUDvbTjmceA/Nn4REc2AGcBXI+LIXNu+EXH0Fo7Xbm7VqlV88skn5duPPfYYHTt23GL/t99+m3Xr1gHwzjvvMH/+fNq2bVvtOK1ateKpp54CYNq0aRx11FGVxv3888/p27cvF154If379y9vTymxYMGC8u2pU6fSrl27HXDlkiTVrprcnNWUskdflUTEE8D7lN2ctFFKKV29I4urbSmlVyLiZWA+UAo8tw2H/Rz4TUS8RtlM7HUppT9ExHeAByJi71y//wHeqIWytYt7//336du3bGXKunXr+Na3vsXXv/51HnroIS6//HKWLFlCnz59KCws5C9/+QvPPvssN910Ew0bNqRevXqMHj2aAw44gLfeeqvKcQDuuOMOfvSjH7Fu3ToaNWpUvv61uLiY2267jbFjx/Lggw/y9NNP8+GHHzJu3DgAxo0bR0FBAYMGDWLFihWklOjcuTNjxozZ+d8oSZJqqCaPw9riDVk5KaV0+Bcvac/g47B2TxsfhyVJ0u4kc4/Dyr3qVZIkSaoT27zGNSIujIj9t7CveURcuOPKkiRJkjZVk5uz7gaO2MK+w3L7JUmSpFpRk+Ba3at19gd8MKkkSZJqTbVrXCPibODsCk3DImLJZt0aAScBL+7g2iRJkqRyW7s5qwXQqcLXRwAtN+vzOfAYZY+JkiRJkmpFtcE1pXQHcAdARDwJXJZSmr8zCpMkSZIqqsnjsLrXZiGSJElSdWry5iwiohVwJtCGsrWtFWXuzVmSJEnKjpq8Oasv8ABQH/iAsrWtFfnmrBooKipKxcXFdV2GJEnSVmXuzVnADZTdhPWdlNJHtVSPJEmSVKWaBNdDgMsNrZIkSaoLNXkBwfPAMbVViCRJklSdmsy4DgHuj4iVwOPAx5t3SCl9uqMKkyRJkiqqSXCdm/t8N7ClO7rqf7FyJEmSpKrVJLhezJYDqyRJklSravICgnG1WIckSZJUrZrcnCVJkiTVmW2ecY2IJWxlqUBKqcUXrkiSJEmqQk3WuP6GysG1GXA60AS4a0cVtSeYv3AZ3a6eWNdlaDvNGN6/rkuQJGmPU5M1rj+tqj0iAngQWLuDapIkSZIq+cJrXFNKCRgL/PCLlyNJkiRVbUfdnHU4sNcOGkuSJEmqpCY3Z/2giua9gHxgIPD7HVWUJEmStLma3Jx1axVta4CFwGjguh1SkSRJklSFmtyc5TNfJUmSVGcMo5IkScqEGgXXiDg8IsZExKsRsSj3eXREHF5bBUqSJElQs5uzugJPAp8BDwPvAwcB/YCBEdE9pTS7VqqUJEnSHq8mM64jgJeBtimli1NK/yeldDFwWK59RG0UWJWIOCciUkS0+wLHt9+O474TEbfmtr8fERduz/m1+1i/fj3HHnssZ555JgBPPPEEXbp0obCwkBNPPJEFCxYAMG7cOA488EAKCwspLCxk7Nix5WN8/etfp2nTpuVjbJRS4pprruHoo48mPz+fX/3qV1XWcM8993DUUUdx1FFHcc8995S3T5gwgYKCAjp06MDVV1+9oy9dkqSdriZPFfgycH5K6dOKjSmlTyNiBDBhh1ZWvQHAs7nP127H8edQNms8b/MdEdEgpbRuawOklG7bjvNqN3PLLbeQn5/PihUrALjsssuYMmUK+fn5jB49mp///OeMGzcOgG9+85vcemvlh3NcddVVfPrpp/z2t7/dpH3cuHGUlpYyf/586tWrxwcffFDp2I8++ojrrruO4uJiIoKuXbty1llnsWHDBq666ipeeuklDjzwQAYNGsQTTzzB6aefvuO/CZIk7SQ1mXFdDey/hX3NKVtCUOsiIg84ERgMXJBrOzUiHq7Q59aI+E5u+6aImBcRcyNiRER8BTgLuDki5kTEERExPSJGRUQx8KOI+EZEzIyIlyPirxFxUBV1/DQirsxtfzciXoyIVyJiUkQ0rvVvhOrcwoUL+dOf/sQll1xS3hYR5SF2+fLltGrVaqvjnH766XzpS1+q1D5mzBh+8pOfUK9e2T/TFi1aVOrzl7/8hR49etC8eXOaNWtGjx49ePTRR3nrrbc46qijOPDAAwH42te+xqRJk7brOiVJ2lXUJLj+CbgpIk6s2Jj7+kbgjzuysGqcDTyaUnoD+DC39rZKEbE/0BfokFIqAH6eUnoemApclVIqTCn9I9d9r5RSUUrpl5TN5nZLKR0LjAf+eys1/SGldFxKqTPwd8pCtXZzP/7xj/nFL35RHiwBxo4dyxlnnEGbNm247777GDp0aPm+SZMmUVBQQP/+/SktLd3q+P/4xz+YMGECRUVF9O7dmzfffLNSn0WLFnHIIYeUf92mTRsWLVrEkUceyeuvv05JSQnr1q1j8uTJ23ROSZJ2ZTUJrkOAt4CnImJxbnZxMfA08DbwX7VRYBUGUBYmyZhxz10AAB/gSURBVH0eUE3f5ZTNBN8ZEecCn1bTt+JShzbAXyLiVeAqoMNWauoYEc/k+g/cUv+IuDQiiiOieO3qFVsZUruyhx9+mBYtWtC166a/N40cOZJHHnmEhQsXctFFFzFkyBAAvvGNb1BSUsLcuXPp0aMHgwYN2uo51qxZQ6NGjSguLua73/0uF1988TbX16xZM8aMGcM3v/lNTjrpJNq2bUv9+vVrdpGSJO1itjm4ppQ+TCmdCPSh7E1Zz+U+fz2ldGJK6cNaqrFcRDQHTgPGRkQJZaHyfGA9m15Lo1zN6yhbmzsROBN4tJrhV1XY/jVwa0qpE/C9jeNVYxzww1z/67bUP6V0e25Wt6jhPk22MqR2Zc899xxTp06lbdu2XHDBBUybNo0+ffrwyiuvcPzxxwNla1qff/55APbff3/23ntvAC655BJeeumlrZ6jTZs2nHvuuQD07duXuXPnVurTunXrTWZSFy5cSOvWrYGysDxz5kxeeOEFjjnmGI4++ugvdtGSJNWxaoNrRBycW7PZa2NbSunRlNL/ppR+kFL637JuMSkiKi/A2/H6A/ellA5NKbVNKR1C2WxvPaB9ROwdEU2B03P15wH7pZQeAa4AOufG+QSovKjwX/YDFuW2tz41VjbW4ohoSNmMq3ZzN954IwsXLqSkpITx48dz2mmnMWXKFJYvX84bb7wBwOOPP05+fj4AixcvLj926tSp5e3VOeecc3jyyScBeOqpp6oMnr169eKxxx5j2bJlLFu2jMcee4xevcr+uW68mWvZsmWMHj16k7W4kiRl0daeKnAlcDjwWDV9HqNsjet/AbX9zJ0BwPDN2iZRdpPWg8BrlAXZl3P7vgRMiYhGQFC23AHKlhjcERH/SVkY3txPgd9HxDJgGmWP/KrOMGAmsCT3ubpQrN1UgwYNuOOOO+jXrx/16tWjWbNm3HXXXQD86le/YurUqTRo0IDmzZuXP2kA4KSTTmL+/PmsXLmSNm3acOedd9KrVy+GDh3KwIEDGTlyJHl5eeWP0CouLua2225j7NixNG/enGHDhnHccccB8JOf/ITmzZsD8KMf/YhXXnmlvN0ZV0lS1kVKacs7I14H/l9K6bdb7FTW73vAFSml7Xqu6p4or+URqeOgzTO4smLG8Kp+35EkafcUES+llIrquo6trXE9lCqedVqFvwNtv3A1kiRJ0hZsLbiuBrblLqK8XF9JkiSpVmwtuM6m7GH9W3N2rq8kSZJUK7YWXEcDgyNii3fWR8SFwEVA5XdZSpIkSTtItU8VSClNiohbgLsj4oeUPQf1XSAB/wb0AoqAkSmlh2q7WEmSJO25tvY4LFJK/xUR04EfU/Z4rL1zu9ZQ9hKCs1NKD9dahZIkSRLbEFwBUkp/BP4YEQ2A/XPNH+beTCVJkiTVum0Krhvlgur7tVSLJEmStEVbuzlLkiRJ2iXUaMZVO067Ns18+5IkSVINOOMqSZKkTDC4SpIkKRMMrpIkScoEg6skSZIyweAqSZKkTDC4SpIkKRMMrpIkScoEg6skSZIyweAqSZKkTPDNWXVk/sJldLt6Yl2XkTm+bUySpD2XM66SJEnKBIOrJEmSMsHgKkmSpEwwuEqSJCkTDK6SJEnKBIOrJEmSMsHgKkmSpEwwuEqSJCkTDK6SJEnKBIOrMuezzz7jy1/+Mp07d6ZDhw5ce+21AAwePJjOnTtTUFBA//79WblyJQDvvPMOp59+OgUFBZx66qksXLiwfKx3332Xnj17kp+fT/v27SkpKQHgpJNOorCwkMLCQlq1asU555xTqY4nn3yyvE9hYSGNGjVi8uTJ1dYiSZK2X6SU6rqGnS4iVqaU8uqyhryWR6SOg4bXZQmZNGN4f1JKrFq1iry8PNauXcuJJ57ILbfcQvv27WnSpAkAQ4YMoUWLFgwdOpTzzjuPM888k0GDBjFt2jTuvvtu7rvvPgBOPfVUrrnmGnr06MHKlSupV68ejRs33uSc/fr14+yzz+bCCy/cYl0fffQRRx55JAsXLqRx48asWLGiylokScqiiHgppVRU13U446rMiQjy8sp+71i7di1r164lIsqDYkqJ1atXExEAzJs3j9NOOw2A7t27M2XKlPL2devW0aNHDwDy8vIqhdYVK1Ywbdq0KmdcK5o4cSK9e/cuP35LtUiSpO23xwbXiMiLiCciYnZEvBoRZ+fa20bE/Ii4PyL+HhETI6Jxbt9PIuLFiHgtIm6PXBqJiOkRMTwiZkXEGxFxUl1e255g/fr1FBYW0qJFC3r06MHxxx8PwEUXXUTLli2ZP38+l19+OQCdO3fmD3/4AwAPPfQQn3zyCR9++CFvvPEGTZs25dxzz+XYY4/lqquuYv369ZucZ/LkyZx++unlQXRLxo8fz4ABAzZpq6oWSZK0/fbY4Ap8BvRNKXUBugO/jH9Nix0DjE4p5QMrgB/k2m9NKR2XUuoI7AOcWWG8BimlLwM/Bq6t6oQRcWlEFEdE8drVK2rhkvYc9evXZ86cOSxcuJBZs2bx2muvAXD33Xfz3nvvkZ+fz4QJEwAYMWIETz31FMceeyxPPfUUrVu3pn79+qxbt45nnnmGESNG8OKLL/LWW28xbty4Tc7zwAMPVAqkm1u8eDGvvvoqvXr12qS9qlokSdL225ODawA3RMRc4K9Aa+Cg3L7SlNJzue3fASfmtrtHxMyIeBU4DehQYbw/5D6/BLSt6oQppdtTSkUppaKG+1Q/g6dt07RpU7p3786jjz5a3la/fn0uuOACJk2aBECrVq34wx/+wMsvv8z1119fflybNm0oLCzk8MMPp0GDBpxzzjnMnj27fJylS5cya9Ys+vTpU20NDz74IH379qVhw4aV9m1eiyRJ2n57cnAdCBwIdE0pFQLvA41y+za/Yy1FRCNgNNA/pdQJuKNCf4A1uc/rgQa1VrVYsmQJH3/8MQCrV6/m8ccf55hjjmHBggVA2brSqVOn0q5dO6AsgG7YsAGAG2+8kYsvvhiA4447jo8//pglS5YAMG3aNNq3b19+nokTJ3LmmWfSqFHFH3Nlm8/KppS2WIskSdp+e3Jw3Q/4IKW0NiK6A4dW2PdvEXFCbvtbwLP8K6QujYg8oP/OK1UVLV68mO7du1NQUMBxxx1Hjx496NOnD4MGDaJTp0506tSJxYsX85Of/ASA6dOnc8wxx3D00Ufz/vvvc8011wBls6EjRozg9NNPp1OnTqSU+O53v1t+nqrWrRYXF3PJJZeUf11SUkJpaSmnnHJKeVtKaYu1SJKk7bfHPQ4rIhpQNrt6DPBHIA8oBroBvXPdHs21dQXmAd9OKX0aET8HBgD/BN4A3kkp/TQipgNXppSKI+IAoDil1La6Onwc1vaZMdzfFyRJ2tl2lcdh7Yl/0u4A/COltBQ4YfOdEdEWWJdS+vfN96WU/gf4nyraT62wvZQtrHGVJEnS9tujlgpExPeBB6gifEqSJGnXtkfNuKaUbgNu20qfEqDjTilIkiRJ22yPmnGVJElSdhlcJUmSlAkGV0mSJGWCwVWSJEmZYHCVJElSJhhcJUmSlAl71OOwdiXt2jTzLVCSJEk14IyrJEmSMsHgKkmSpEwwuEqSJCkTDK6SJEnKBIOrJEmSMsHgKkmSpEwwuEqSJCkTDK6SJEnKBIOrJEmSMsE3Z9WR+QuX0e3qiXVag2/ukiRJWeKMqyRJkjLB4CpJkqRMMLhKkiQpEwyukiRJygSDqyRJkjLB4CpJkqRMMLhKkiQpEwyukiRJygSDqyRJkjLB4CpJkqRMyHRwjYj1ETEnIl6JiNkR8ZVtOGblNvQZGxHtd0yVu76LL76YFi1a0LFjx0r7fvnLXxIRLF26FIApU6ZQUFBAYWEhRUVFPPvsswA8+eSTFBYWln80atSIyZMnAzBt2jS6dOlCx44dGTRoEOvWrauyjquvvpqOHTvSsWNHJkyYUEtXK0mSsirTwRVYnVIqTCl1Bv4PcOOOGDSldElKad6OGCsLvvOd7/Doo49Wai8tLeWxxx7j3/7t38rbTj/9dF555RXmzJnDXXfdxSWXXAJA9+7dmTNnDnPmzGHatGk0btyYnj17smHDBgYNGsT48eN57bXXOPTQQ7nnnnsqnetPf/oTs2fPZs6cOcycOZMRI0awYsWK2rtoSZKUOVkPrhU1AZZt/CIiroqIFyNibkRct3nniKgXEaMjYn5EPB4Rj0RE/9y+6RFRlNteWeGY/hExLrc9LiLGRMSMiHgrIk6NiLsi4u8b+2TFySefTPPmzSu1X3HFFfziF78gIsrb8vLyyr9etWrVJvs2mjhxIr1796Zx48Z8+OGH7LXXXhx99NEA9OjRg0mTJlU6Zt68eZx88sk0aNCAfffdl4KCgirDtCRJ2nNlPbjuk1sqMB8YC/wvQET0BI4CvgwUAl0j4uTNjj0XaAu0B74NnLAd52+WO+4KYCowEugAdIqIws07R8SlEVEcEcVrV+/as4lTpkyhdevWdO7cudK+hx56iHbt2tGnTx/uuuuuSvvHjx/PgAEDADjggANYt24dxcXFQFmoLS0trXRM586defTRR/n0009ZunQpTz75ZJX9JEnSnqtBXRfwBa1OKRUCRMQJwL0R0RHomft4Odcvj7Ig+3SFY08Efp9S2gD8MyKe3I7z/zGllCLiVeD9lNKruVr+RlkonlOxc0rpduB2gLyWR6TtON9O8emnn3LDDTfw2GOPVbm/b9++9O3bl6effpphw4bx17/+tXzf4sWLefXVV+nVqxcAEcH48eO54oorWLNmDT179qR+/fqVxuzZsycvvvgiX/nKVzjwwAM54YQTquwnSZL2XFmfcS2XUnoBOAA4EAjgxtz618KU0pEppTu3d+gK240227cm93lDhe2NX2f2l4J//OMfvP3223Tu3Jm2bduycOFCunTpwj//+c9N+p188sm89dZb5TduATz44IP07duXhg0blredcMIJPPPMM8yaNYuTTz65fNnA5q655hrmzJnD448/Tkppi/0kSdKeabcJrhHRDqgPfAj8Bbg4IvJy+1pHRIvNDnkO6Jdb63oQcOoWhn4/IvIjoh7Qt3aq37V06tSJDz74gJKSEkpKSmjTpg2zZ8+mZcuWLFiwgJTKsvzs2bNZs2YN+++/f/mxDzzwQPkygY0++OADANasWcPw4cP5/ve/X+mc69ev58MPPwRg7ty5zJ07l549e9bWJUqSpAzK7Kxgzj4RsfHP8QEMSimtBx6LiHzghdzNQyuBfwc+qHDsJOB0YB5QCswGlldxjqHAw8ASoJiyZQe7lQEDBjB9+nSWLl1KmzZtuO666xg8eHCVfSdNmsS9995Lw4YN2WeffZgwYUL5DVolJSWUlpZyyimnbHLMzTffzMMPP8yGDRu47LLLOO200wAoLi7mtttuY+zYsaxdu5aTTjoJgCZNmvC73/2OBg2y/p+nJEnakWLj7NmeKCLyUkorI2J/YBbw1ZTSP7d23I6Q1/KI1HHQ8J1xqi2aMbx/nZ5fkiRlQ0S8lFIqqus69vQprYcjoimwF/C/Oyu0SpIkqeb26OCaUjq1rmuQJEnSttltbs6SJEnS7s3gKkmSpEwwuEqSJCkTDK6SJEnKBIOrJEmSMsHgKkmSpEwwuEqSJCkT9ujnuNaldm2a+eYqSZKkGnDGVZIkSZlgcJUkSVImGFwlSZKUCQZXSZIkZYLBVZIkSZlgcJUkSVImGFwlSZKUCQZXSZIkZYIvIKgj8xcuo9vVE6vt4wsKJEmS/sUZV0mSJGWCwVWSJEmZYHCVJElSJhhcJUmSlAkGV0mSJGWCwVWSJEmZYHCVJElSJhhcJUmSlAkGV0mSJGWCwVWSJEmZsEsH14i4JiL+FhFzI2JORBwfEWMjon1d17YzfPbZZ3z5y1+mc+fOdOjQgWuvvRaA73znOxx22GEUFhZSWFjInDlzAJg/fz4nnHACe++9NyNGjNhkrI8//pj+/fvTrl078vPzeeGFFyqdL6XEf/7nf3LkkUdSUFDA7NmzN9m/YsUK2rRpww9/+MNaumJJkqQta1DXBWxJRJwAnAl0SSmtiYgDgL1SSpfUcWmVRET9lNL6HT3u3nvvzbRp08jLy2Pt2rWceOKJ9O7dG4Cbb76Z/v37b9K/efPm/OpXv2Ly5MmVxvrRj37E17/+dSZOnMjnn3/Op59+WqnPn//8Z958803efPNNZs6cyWWXXcbMmTPL9w8bNoyTTz55B1+lJEnSttmVZ1wPBpamlNYApJSWppTei4jpEVEEEBErI+L6iHglImZExEG59iNyX78aET+PiJW59ryIeCIiZuf2nZ1rbxsR8yPi/oj4e0RMjIjGuX2nR8TLuf53RcTeufaSiBgeEbOB8yKiZ0S8kBv79xGR90W/ARFBXl7ZMGvXrmXt2rVExBb7t2jRguOOO46GDRtu0r58+XKefvppBg8eDMBee+1F06ZNKx0/ZcoULrzwQiKCbt268fHHH7N48WIAXnrpJd5//3169uz5RS9LkiRpu+zKwfUx4JCIeCMiRkfEKVX02ReYkVLqDDwNfDfXfgtwS0qpE7CwQv/PgL4ppS5Ad+CX8a8keAwwOqWUD6wAfhARjYBxwDdzYzUALqsw3oe5sf4K/A/wtdzXxcCQL3j9AKxfv57CwkJatGhBjx49OP744wG45pprKCgo4IorrmDNmjXVjvH2229z4IEHctFFF3HsscdyySWXsGrVqkr9Fi1axCGHHFL+dZs2bVi0aBEbNmzgv/7rvyotP5AkSdqZdtngmlJaCXQFLgWWABMi4jubdfsceDi3/RLQNrd9AvD73Pb/V6F/ADdExFzKwmZr4KDcvtKU0nO57d8BJ1IWZt9OKb2Ra78HqPi38gm5z92A9sBzETEHGAQcuvk1RcSlEVEcEcVrV6+o9vo3ql+/PnPmzGHhwoXMmjWL1157jRtvvJH58+fz4osv8tFHHzF8+PBqx1i3bh2zZ8/msssu4+WXX2bfffflpptu2qbzA4wePZozzjiDNm3abPMxkiRJO9ouu8YVILdudDowPSJepSwQVrQ2pZRy2+vZ+vUMBA4EuqaU1kZECdBo4+k2P/02lLhx2jKAx1NKA6rrnFK6HbgdIK/lEdsyfrmmTZvSvXt3Hn30Ua688kqgbA3sRRddtNWZ0DZt2tCmTZvy2dr+/ftXGVxbt25NaWlp+dcLFy6kdevWvPDCCzzzzDOMHj2alStX8vnnn5OXl1ej8CtJkvRF7bIzrhFxTEQcVaGpEHhnGw+fAfTLbV9QoX0/4INcaO3OprOi/5a7IQzgW8CzwOtA24g4Mtf+beCpLZzvqxv7RcS+EXH0Nta6RUuWLOHjjz8GYPXq1Tz++OO0a9eufN1pSonJkyfTsWPHasdp2bIlhxxyCK+//joATzzxBO3bV34ww1lnncW9995LSokZM2aw3377cfDBB3P//ffz7rvvUlJSwogRI7jwwgsNrZIkaafblWdc84BfR0RTYB2wgLJlAxO34dgfA7+LiGuAR4Hlufb7gT/mZm+LgfkVjnkd+I+IuAuYB4xJKX0WERcBv4+IBsCLwG2bnyyltCS3jOGBjTdvUbbm9Y3N+9bE4sWLGTRoEOvXr2fDhg2cf/75nHnmmZx22mksWbKElBKFhYXcdltZSf/85z8pKipixYoV1KtXj1GjRjFv3jyaNGnCr3/9awYOHMjnn3/O4Ycfzt133w1Qfuz3v/99zjjjDB555BGOPPJIGjduXN5HkiRpVxD/+kv77iP3RIDVKaUUERcAA1JKZ1fTvy3wcEqp+qnLHSiv5RGp46Dq16bOGN6/2v2SJEk7Q0S8lFIqqus6duUZ1y+iK3Br7okBHwMX13E9kiRJ+oJ2y+CaUnoG6FyD/iXATpttlSRJUs3tsjdnSZIkSRUZXCVJkpQJBldJkiRlgsFVkiRJmWBwlSRJUiYYXCVJkpQJBldJkiRlwm75HNcsaNemmW/GkiRJqgFnXCVJkpQJBldJkiRlgsFVkiRJmWBwlSRJUiYYXCVJkpQJBldJkiRlgsFVkiRJmWBwlSRJUiYYXCVJkpQJBldJkiRlgsFVkiRJmWBwlSRJUiYYXCVJkpQJBldJkiRlQqSU6rqGPVJEfAK8Xtd1aIc4AFha10XoC/PnuPvwZ7l78Oe4azk0pXRgXRfRoK4L2IO9nlIqqusi9MVFRLE/y+zz57j78Ge5e/DnqKq4VECSJEmZYHCVJElSJhhc687tdV2Adhh/lrsHf467D3+Wuwd/jqrEm7MkSZKUCc64SpIkKRMMrnUgIr4eEa9HxIKIGFrX9ahMRJRExKsRMSciinNtzSPi8Yh4M/e5Wa49IuJXuZ/h3IjoUmGcQbn+b0bEoArtXXPjL8gdGzv/KndPEXFXRHwQEa9VaKv1n92WzqHts4Wf408jYlHu3+WciDijwr7/k/uZvB4RvSq0V/n/2Ig4LCJm5tonRMRe/3979xtjR1XGcfz7s7WlKYgtRFJpsdQ0JNVEbAgpSVMRSW37wgqWUjHBiAlRMcF/LwjEfxFNbBTeWEWNJlQMW1xaqTa4LRSDGFsIRiotii1iLNQiLP0jWin4+OI8V4ebvWW7O3vvTvl9kpM955m5M2f37EyfzpyZzfjkbO/O5bO78x2fmCTNknSfpF2Sdkq6NuM+Jm30IsKliwWYAOwB5gCTgEeAeb3ul0sAPAmc3hZbDVyX9euAr2d9GXA3IGABsD3j04En8uu0rE/LZQ/musrPLu3193yiFGARMB94tJtj12kfLrWO45eAzw2x7rw8f04Gzs7z6oRjnWOBO4BVWb8F+HjWPwHckvVVwLpe/yyaXIAZwPysnwI8nuPlY9Jl1MVXXLvvfGB3RDwRES8CfcDyHvfJOlsO3Jr1W4H3V+Jro9gGvFHSDOC9wJaIGIyI54EtwJJc9oaI2BbljLq2si0bpYi4HxhsC3dj7Drtw0agwzh2shzoi4h/R8Sfgd2U8+uQ59i8IncR0J+fb/+daI1jP/Ae3xEZuYjYFxG/zfph4DHgTHxMWg2cuHbfmcBfK+29GbPeC2CzpIclXZ2xMyJiX9b/BpyR9U7jeKz43iHiNna6MXad9mH1+mTeQv5h5dbv8Y7jacCBiHipLf6KbeXyg7m+jVJOu3gnsB0fk1YDJ65m/7cwIuYDS4FrJC2qLsz/2fs1HA3UjbHz78eY+Q7wVuBcYB/wzd52x4ZL0snAncCnIuJQdZmPSRspJ67d9xQwq9KemTHrsYh4Kr8+A2yg3HLcn7elyK/P5OqdxvFY8ZlDxG3sdGPsOu3DahIR+yPi5Yj4D/B9ynEJxz+Oz1FuQU9si79iW7n81FzfRkjS6ylJ648jYn2GfUzaqDlx7b6HgLn5dOskyoMAG3vcp9c8SVMlndKqA4uBRylj03qS9cPAXVnfCFyZT8MuAA7m7akBYLGkaXlLczEwkMsOSVqQc+eurGzLxkY3xq7TPqwmrSQkXUI5LqH87FflGwHOBuZSHtgZ8hybV9/uA1bk59t/J1rjuALYmuvbCORx8gPgsYi4qbLIx6SNXq+fDnstFsoTlI9Tnny9odf9cQkoTyA/kmVna1wo89zuBf4E3ANMz7iANTmGvwfOq2zrKsqDIruBj1Ti51H+0d0DfIv8AyAutYzf7ZTbyEcp890+2o2x67QPl1rH8Uc5TjsoScmMyvo35Jj8kcpbOjqdY/M4fzDH9yfA5IyflO3duXxOr38WTS7AQsot+h3A77Is8zHpUkfxX84yMzMzs0bwVAEzMzMzawQnrmZmZmbWCE5czczMzKwRnLiamZmZWSM4cTUzMzOzRnDiamZmZmaN4MTVzKxGkmIY5cJe99PMrIkmvvoqZmZ2HC6o1KcAW4EbgU2V+K6u9sjM7AThxNXMrEYRsa1Vl3RyVvdU4yMhaUpE/GtUneuSJvXVzJrFUwXMzLpI0i8l9bfFLswpBG/P9uxsf0jSWkkHgJ9V4islfVfSQUl7JX1Z0uvatnmRpO2SjkjaL+nbrURa0lRJL0i6Zoj+PSTptkr7LEl9kgYl/VPSgKRzKsuH7Gu9PzUzs8KJq5nZ+PUN4DBwGfC1Snw18A9gBXAb8IWsAyDpbcAvgGeBDwBfBK4A+gEi4gXg58DK6s4kzaH8Dfi+bE8HHgDOAT6W608F7pE0ZZh9NTOrjacKmJmNX9si4n9XRSXNzur9EfHZrG+RtAS4FLgjY58H/gK8LyJezs8OAuskXRARv6Ekp/2S3hwRT+fnLgeeBway/WlKonpuRAzmdn4NPAlcBazp1Fczs7HgK65mZuPXpg7xzW3tXcDMSvt8YEMraU13Ai8BC7N9N+Wq7WWVdS7Pzx3N9sXAFuCQpImSJlKuqj5MuTI7nL6amdXGiauZ2fi1v0P8QFv7ReCkSntG+2cziX0OmJ7tI8BdlGSVnLf6DnKaQDo9lx9tK+8GZg2zr2ZmtfFUATOz7joCTGqLTeuwboxwH/uAN1UDkiYApwGDlfA6ykNfZ1ES1L9TXt/VMghsBL4yxD4O19RXM7Nhc+JqZtZde4FFbbHFNe9jO3CJpOsr0wUupZzzH6ist5ly9XYlJXHtb5tecG8u2+nXW5nZeOCpAmZm3bUBmCvpZkkXS/oqsKTmfdwIzAZ+KmmZpKuB7wED+WAWADmXdT3wGWAe5Qps1U2Uq8NbJV0h6V35Kq41kj5Yc5/NzF6VE1czsy6KiE3A9ZTXV20A3gJcW/M+dgJLKdMF1lMS2dupvDKroo8yJ/Zp4Fdt23kWWAD8AbiZcoV2NXAqsKPOPpuZDYciPC3JzMzMzMY/X3E1MzMzs0Zw4mpmZmZmjeDE1czMzMwawYmrmZmZmTWCE1czMzMzawQnrmZmZmbWCE5czczMzKwRnLiamZmZWSM4cTUzMzOzRvgvkzDDRvkHdV8AAAAASUVORK5CYII=\n","text/plain":["<Figure size 720x432 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"y6YznmzDdjAB"},"source":["# prs = Presentation()   \n","\n","# Bullet Slide\n","bullet_slide_layout = prs.slide_layouts[5]\n","\n","slide = prs.slides.add_slide(bullet_slide_layout)\n","shapes = slide.shapes\n","\n","title_shape = shapes.title\n","\n","shapes.title.text = 'Turnover by Country - Last two months (€)'\n","\n","left = top = Inches(1)\n","pic = slide.shapes.add_picture('/content/drive/MyDrive/1st Project/Final Project/Docs and Images/financesplot.png', left = Inches(1), top = Inches(2), width = Inches(8.5), height = Inches(4.7))\n","\n","#Título de Tabela\n","\n","blank_slide_layout = prs.slide_layouts[6]\n","slide = prs.slides.add_slide(blank_slide_layout)\n","left = top = width = height = Inches(1)\n","txBox = slide.shapes.add_textbox(left = Inches(1.8) , top = Inches(3), width = Inches(7), height = Inches(3))\n","tf = txBox.text_frame\n","p = tf.add_paragraph()\n","p.text = \"Clients with Outstanding Amount\"\n","p.font.size = Pt(35)\n","\n","\n","#Table\n","title_only_slide_layout = prs.slide_layouts[6]\n","slide = prs.slides.add_slide(title_only_slide_layout)\n","shapes = slide.shapes\n","\n","rows = rows_table_orders_not_paid\n","cols = 4 \n","left = Inches(0.7)\n","top = Inches(0.6)\n","width = Inches(9.5)\n","height = Inches(0.5)\n","\n","table = shapes.add_table(rows, cols, left, top, width, height).table\n","\n","table.columns[0].width = Inches(3.5)\n","table.columns[1].width = Inches(1.5)\n","table.columns[2].width = Inches(1.5)\n","table.columns[3].width = Inches(1.5)\n","\n","table.cell(0, 0).text = 'Client'\n","table.cell(0, 1).text = 'Orders(€)'\n","table.cell(0, 2).text = 'Payments(€)'\n","table.cell(0, 3).text = 'In Debt(€)'\n","\n","a = 0\n","b = 0\n","c = 0\n","d = 0\n","\n","for i in range(0,len_str_list,4):\n","  table.cell(1+a,0).text = final_clients_debt_list[i]\n","  a +=1\n","\n","for i in range(1,len_str_list,4):\n","  table.cell(1+b,1).text = final_clients_debt_list[i]\n","  b +=1\n","\n","for i in range(2,len_str_list,4):\n","  table.cell(1+c,2).text = final_clients_debt_list[i]\n","  c +=1\n","\n","for i in range(3,len_str_list,4):\n","  table.cell(1+d,3).text = final_clients_debt_list[i]\n","  d +=1\n","\n","# prs.save('/content/drive/MyDrive/1st Project/Final Project/Docs and Images/finalppt.pptx')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"BW1Zi6ofaUov"},"source":["# **Logistics**"]},{"cell_type":"code","metadata":{"id":"qqV5cEDYacyl"},"source":["connection = mysql.connector.connect(user = 'toyscie', password = 'WILD4Rdata!', host = '51.68.18.102', port = '23456', database = 'toys_and_models', use_pure = True)\n","\n","cursor = connection.cursor()\n","\n","querylo = \"\"\"select products.productName as product, products.quantityInStock as Qte_in_stock, sum(orderdetails.quantityOrdered) as Qte_ordered\n","from orderdetails\n","left join products on products.productcode=orderdetails.productCode\n","left join orders on orderdetails.orderNumber=orders.orderNumber\n","where orders.status='shipped'\n","group by products.productName\n","order by sum(orderdetails.quantityOrdered) desc\n","limit 5;\"\"\"\n","\n","cursor.execute(querylo)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"sfgeM0cGa1RK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1634082537479,"user_tz":-60,"elapsed":6,"user":{"displayName":"Alexandre Santos Gomes","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14082300357332709855"}},"outputId":"d11b76c8-1e29-47e5-ef99-80cbf6715b78"},"source":["data_listlo = []\n","for data in cursor:\n","  data_listlo += data\n","\n","for i in range(2,len(data_listlo) + 1,3):\n","  data_listlo[i] = int(data_listlo[i])\n","\n","print(data_listlo)\n","\n","cars = []\n","Qte_stock = []\n","Qte_order = []\n","n = 0\n","k = 0\n","for i in range(0, len(data_listlo)):\n","  if i == 0 or i % 3 == 0:\n","    cars.append(data_listlo[i])\n","  elif i == 1 or i == (1 + 3 * n):\n","    Qte_stock.append(data_listlo[i])\n","    n += 1\n","  elif i == 2 or i == (2 + 3 * k):\n","    Qte_order.append(data_listlo[i])\n","    k += 1"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['1992 Ferrari 360 Spider red', 8347, 1570, '1937 Lincoln Berline', 8693, 995, '1913 Ford Model T Speedster', 4189, 981, '1957 Chevy Pickup', 6125, 969, '2001 Ferrari Enzo', 3619, 937]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":562},"id":"vhgy2h70bI9U","executionInfo":{"status":"ok","timestamp":1634082538045,"user_tz":-60,"elapsed":570,"user":{"displayName":"Alexandre Santos Gomes","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14082300357332709855"}},"outputId":"1207df19-0c83-419f-91f1-0de428a5fbdb"},"source":["plt.figure(figsize=(18, 7))\n","\n","x = np.arange(len(cars))\n","y1 = Qte_stock\n","y2 = Qte_order\n","width = 0.2\n","  \n","bars1 = plt.bar(x-0.1, y1, width, color='#3776AB')\n","bars2 = plt.bar(x+0.1, y2, width, color='orange')\n","for bar in bars1:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + 0.04, yval + 180, yval)\n","\n","for bar in bars2:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + 0.04, yval + 180, yval)\n","    print(yval)\n","\n","plt.xticks(x, cars)\n","plt.xlabel(\"Products\", size = 25, labelpad = 25)\n","plt.ylabel(\"Quantity\", size = 25, labelpad = 5)\n","#plt.title(\"Stock for top 5 products ordered\", size = 25)\n","plt.legend(['Stock', 'Ordered'])\n","\n","\n","plt.savefig('/content/drive/MyDrive/1st Project/Final Project/Docs and Images/logisticsplot.png')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1570\n","995\n","981\n","969\n","937\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1296x504 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"FkKsCl6EbOST"},"source":["#prs = Presentation()\n","\n","\n","bullet_slide_layout = prs.slide_layouts[5]\n","slide = prs.slides.add_slide(bullet_slide_layout)\n","shapes = slide.shapes\n","title_shape = shapes.title\n","shapes.title.text = 'Stock of the most ordered products'\n","left = top = Inches(0.1)\n","\n","\n","\n","pic = slide.shapes.add_picture('/content/drive/MyDrive/1st Project/Final Project/Docs and Images/logisticsplot.png', left = Inches(-0.7), top = Inches(1.5), width = Inches(11.5), height = Inches(5))\n","\n","\n","#prs.save('/content/drive/MyDrive/1st Project/Final Project/Docs and Images/finalppt.pptx')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"lKdF14PfbveE"},"source":["# **Human Resources**"]},{"cell_type":"code","metadata":{"id":"wSagYTlYe9Ya","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1634082539548,"user_tz":-60,"elapsed":1507,"user":{"displayName":"Alexandre Santos Gomes","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14082300357332709855"}},"outputId":"c27e57c1-eb3d-4e2e-969b-c45972b8bd2e"},"source":["connection = mysql.connector.connect(user = 'toyscie', password = 'WILD4Rdata!', host = '51.68.18.102', port = '23456', database = 'toys_and_models', use_pure = True)\n","\n","\n","cursor = connection.cursor()\n","\n","queryhr1 = \"\"\"select employees.firstName, employees.lastName, sum(payments.amount), year(payments.paymentDate) as year, month(payments.paymentDate) as month\n","from employees\n","inner join customers on employees.employeeNumber=customers.salesRepEmployeeNumber\n","  inner join payments on customers.customerNumber=payments.customerNumber\n","group by employees.lastName, date_format(payments.paymentDate, \" %Y %M\")\n","having year= 2021 and month = 8\n","order by sum(payments.amount) desc\n","limit 2\n","\"\"\"\n","\n","actual_month = str(datetime.datetime.now().month)\n","actual_year = str(datetime.datetime.now().year)\n","list_query = queryhr1.split()\n","list_query[31] = actual_year\n","list_query[35] = str(int(actual_month) - 1)\n","queryhr1final = \" \".join(list_query)\n","\n","cursor.execute(queryhr1final)\n","\n","data_listhr = []\n","for data in cursor:\n","  data_listhr += data\n","\n","cursor = connection.cursor()\n","\n","queryhr2 = \"\"\"select employees.firstName, employees.lastName, sum(payments.amount),year(payments.paymentDate) as year, date_format(payments.paymentDate, \" %Y %M\") as new_date\n","from employees\n","inner join customers on employees.employeeNumber=customers.salesRepEmployeeNumber\n","\tinner join payments on customers.customerNumber=payments.customerNumber\n","group by employees.lastName, date_format(payments.paymentDate, \" %Y %M\")\n","having year= 2021\n","order by sum(payments.amount) desc\n","limit 10\n","\"\"\"\n","cursor.execute(queryhr2)\n","\n","data_listhr2 = []\n","for data in cursor:\n","  data_listhr2 += data\n","\n","# #queryhr3 = \"\"\"select employees.firstName, employees.lastName, sum(payments.amount), year(payments.paymentDate) as year, month(payments.paymentDate) as month\n","# from employees\n","# inner join customers on employees.employeeNumber=customers.salesRepEmployeeNumber\n","# \tinner join payments on customers.customerNumber=payments.customerNumber\n","# where paymentDate >= DATE_FORMAT(CURDATE(), '%Y-%m-%d') - INTERVAL 1 MONTH\n","# group by employees.lastName, date_format(payments.paymentDate, \" %Y %M\")\n","# order by sum(payments.amount) desc\n","# limit 2;\n","# \"\"\"\n","# cursor.execute(queryhr3)\n","\n","# data_listhr3 = []\n","# for data in cursor:\n","#   data_listhr3 += data\n","\n","print(data_listhr)\n","print(data_listhr2)\n","#print(data_listhr3)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Gerard', 'Hernandez', Decimal('169690.25'), 2021, 9, 'Leslie', 'Jennings', Decimal('148026.25'), 2021, 9]\n","['Gerard', 'Hernandez', Decimal('169690.25'), 2021, ' 2021 September', 'Leslie', 'Jennings', Decimal('148026.25'), 2021, ' 2021 September', 'Larry', 'Bott', Decimal('133954.51'), 2021, ' 2021 May', 'George', 'Vanauf', Decimal('122323.55'), 2021, ' 2021 June', 'Gerard', 'Hernandez', Decimal('117884.54'), 2021, ' 2021 July', 'Gerard', 'Hernandez', Decimal('114825.97'), 2021, ' 2021 May', 'Pamela', 'Castillo', Decimal('113114.30'), 2021, ' 2021 June', 'Barry', 'Jones', Decimal('110017.53'), 2021, ' 2021 April', 'Steve', 'Patterson', Decimal('106491.17'), 2021, ' 2021 March', 'Steve', 'Patterson', Decimal('98211.02'), 2021, ' 2021 May']\n"]}]},{"cell_type":"code","metadata":{"id":"8LOP3tNsfk0F"},"source":["month_idx = data_listhr[4]\n","month_name = calendar.month_name[month_idx]\n","\n","year_name = str(data_listhr[3])\n","\n","\n","for i in range(2,len(data_listhr) + 1, 5):\n","  data_listhr[i] = float(data_listhr[i])\n","\n","for i in range(2,len(data_listhr2) + 1, 5):\n","  data_listhr2[i] = float(data_listhr2[i])\n","\n","complete_name1 = \" \".join(data_listhr[0:2])\n","complete_name2 = \" \".join(data_listhr[5:7])\n","\n","final_text1 = complete_name1 + \" with \" + str(data_listhr[2]) +\"€\"\n","final_text2 = complete_name2 + \" with \" + str(data_listhr[7]) +\"€\"\n","bullet_title = month_name + \" \" + year_name"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"D1oqLd-tf84N"},"source":["# prs = Presentation()\n","\n","# Bullet Slide\n","bullet_slide_layout = prs.slide_layouts[1]\n","\n","slide = prs.slides.add_slide(bullet_slide_layout)\n","shapes = slide.shapes\n","\n","title_shape = shapes.title\n","body_shape = shapes.placeholders[1]\n","\n","title_shape.text = 'Two sellers with highest turnover'\n","\n","tf = body_shape.text_frame\n","tf.text = bullet_title\n","\n","p = tf.add_paragraph()\n","\n","p = tf.add_paragraph()\n","p.text = final_text1\n","p.level = 1\n","\n","p = tf.add_paragraph()\n","\n","p = tf.add_paragraph()\n","p.text = final_text2\n","p.level = 1\n","\n","# Table Slide\n","title_only_slide_layout = prs.slide_layouts[5]\n","slide = prs.slides.add_slide(title_only_slide_layout)\n","shapes = slide.shapes\n","\n","shapes.title.text = 'Top 10 turnover of ' + year_name\n","\n","rows = 11\n","cols = 3\n","left = Inches(0.5)\n","top = Inches(2.0)\n","width = Inches(6.0)\n","height = Inches(0.8)\n","\n","table = shapes.add_table(rows, cols, left, top, width, height).table\n","\n","table.columns[0].width = Inches(3.0)\n","table.columns[1].width = Inches(3.0)\n","table.columns[2].width = Inches(3.0)\n","\n","table.cell(0, 0).text = 'Name'\n","table.cell(0, 1).text = 'Turnover in €'\n","table.cell(0, 2).text = 'Month'\n","\n","for i in range(10):\n","    table.cell(i + 1, 0).text = ' '.join(data_listhr2[i*5:i*5+2])\n","    table.cell(i + 1, 1).text = str(data_listhr2[2:len(data_listhr2)+1:5][i])\n","    table.cell(i + 1, 2).text = data_listhr2[4:len(data_listhr2)+1:5][i]\n","\n","prs.save('/content/drive/MyDrive/1st Project/Final Project/Docs and Images/finalppt.pptx')"],"execution_count":null,"outputs":[]}]}